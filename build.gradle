plugins {
    id 'java'
    id 'de.fuerstenau.buildconfig' version "${build_config_version}"
}

group = project.group
version = project.version

println(' Java: ' + System.getProperty('java.version') +
        ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ')' +
        ' Arch: ' + System.getProperty('os.arch'))

buildConfig {
    buildConfigField "String", "HASH", "${execute("git rev-parse --short HEAD")}"
    buildConfigField "String", "BRANCH", "${execute("git branch --show-current")}"
    buildConfigField "String", "VERSION", "${project.version}"
    buildConfigField "int", "BUILD", "${project.build}"

    packageName "us.xgraza.sdrpc"
}

sourceSets.main.java.srcDirs += "build/gen/buildconfig/src/main"

repositories {
    mavenCentral()
}

configurations {
    library
    compile
}

dependencies {
    library "net.java.dev.jna:jna:${project.jna_version}"
    implementation configurations.library
}

def execute(String cmd) {
    try {
        def stdout = new ByteArrayOutputStream()

        exec {
            commandLine cmd.split(" ")
            standardOutput = stdout
        }

        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }
}

jar {
    from {
        configurations.library.collect { it.isDirectory() ? it : zipTree(it) }
    }
}